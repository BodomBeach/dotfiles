// Place your key bindings in this file to override the defaultsauto[]
[
    {
        "key": "`",
        "command": "editor.action.deleteLines",
        "when": "textInputFocus && !editorReadonly"
    },
    {
        "key": "ctrl+shift+k",
        "command": "-editor.action.deleteLines",
        "when": "textInputFocus && !editorReadonly"
    },
    {
        "key": "shift+alt+p",
        "command": "workbench.action.openWorkspace"
    },
    {
        "key": "ctrl+`",
        "command": "workbench.action.quickOpen"
    },
    {
        "key": "ctrl+e",
        "command": "-workbench.action.quickOpen"
    },
    {
        "key": "alt+escape",
        "command": "editor.action.commentLine",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+/",
        "command": "-editor.action.commentLine",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+shift+d",
        "command": "editor.action.copyLinesDownAction",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+shift+alt+down",
        "command": "-editor.action.copyLinesDownAction",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+shift+right",
        "command": "-cursorWordEndRightSelect",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+shift+left",
        "command": "-cursorWordLeftSelect",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+up",
        "command": "editor.action.moveLinesUpAction",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "alt+up",
        "command": "-editor.action.moveLinesUpAction",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+down",
        "command": "editor.action.moveLinesDownAction",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "alt+down",
        "command": "-editor.action.moveLinesDownAction",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "shift+alt+w",
        "command": "workbench.action.closeOtherEditors"
    },
    {
        "key": "ctrl+\\",
        "command": "workbench.action.toggleMultiCursorModifier"
    },
    {
      "key": "ctrl+w",
      "command": "toggleSearchEditorWholeWord",
      "when": "inSearchEditor && searchInputBoxFocus"
    },
    {
      "key": "alt+w",
      "command": "-toggleSearchEditorWholeWord",
      "when": "inSearchEditor && searchInputBoxFocus"
    },
    {
      "key": "alt+w",
      "command": "workbench.action.closeActiveEditor"
    },
    {
      "key": "ctrl+w",
      "command": "-workbench.action.closeActiveEditor"
    },
    {
      "key": "alt+b",
      "command": "toggleSearchWholeWord",
      "when": "searchViewletFocus"
    },
    {
      "key": "alt+w",
      "command": "-toggleSearchWholeWord",
      "when": "searchViewletFocus"
    },
    {
      "key": "alt+r",
      "command": "workbench.view.explorer",
      "when": "viewContainer.workbench.view.explorer.enabled"
    },
    {
      "key": "ctrl+shift+e",
      "command": "-workbench.view.explorer",
      "when": "viewContainer.workbench.view.explorer.enabled"
    },
    {
      "key": "ctrl+shift+alt+c",
      "command": "-copyRelativeFilePath",
      "when": "!editorFocus"
    },
    {
      "key": "ctrl+g",
      "command": "workbench.action.gotoLine"
    },
    {
      "key": "ctrl+g",
      "command": "-workbench.action.gotoLine"
    },
    {
      "key": "alt+left",
      "command": "cursorWordPartLeftSelect"
    },
    {
      "key": "alt+right",
      "command": "cursorWordPartRightSelect"
    },
    {
      "key": "ctrl+left",
      "command": "-cursorWordLeft",
      "when": "textInputFocus"
    },
    {
      "key": "ctrl+left",
      "command": "cursorWordPartLeft"
    },
    {
      "key": "ctrl+right",
      "command": "cursorWordPartRight"
    },
    {
      "key": "ctrl+right",
      "command": "-cursorWordEndRight",
      "when": "textInputFocus"
    },
    {
      "key": "ctrl+shift+.",
      "command": "erb-toggle.toggleTags",
      "when": "editorTextFocus && editorLangId =~ /html/"
    },
    {
      "key": "alt+e",
      "command": "workbench.action.nextEditorInGroup"
    },
    {
      "key": "alt+q",
      "command": "workbench.action.previousEditorInGroup"
    },
    {
      "key": "alt+r",
      "command": "-toggleSearchEditorRegex",
      "when": "inSearchEditor && searchInputBoxFocus"
    },
    {
      "key": "alt+r",
      "command": "-workbench.action.terminal.toggleFindRegex",
      "when": "terminalFindFocused && terminalProcessSupported || terminalFocus && terminalProcessSupported"
    },
    {
      "key": "alt+r",
      "command": "-toggleFindRegex",
      "when": "editorFocus"
    },
    {
      "key": "alt+r",
      "command": "-toggleSearchRegex",
      "when": "searchViewletFocus"
    },
    {
      "key": "alt+down",
      "command": "extension.multiCommand.execute",
      "args": {
          "sequence": [
              "cursorDown",
              "cursorDown",
              "cursorDown",
              "cursorDown",
              "cursorDown",
              "cursorDown",
              "cursorDown",
          ]
      }
    },
    {
      "key": "alt+up",
      "command": "extension.multiCommand.execute",
      "args": {
          "sequence": [
              "cursorUp",
              "cursorUp",
              "cursorUp",
              "cursorUp",
              "cursorUp",
              "cursorUp",
              "cursorUp",
          ]
      }
    },
    {
      "key": "alt+n",
      "command": "toggleSearchEditorCaseSensitive",
      "when": "inSearchEditor && searchInputBoxFocus"
    },
    {
      "key": "alt+c",
      "command": "-toggleSearchEditorCaseSensitive",
      "when": "inSearchEditor && searchInputBoxFocus"
    },
    {
      "key": "alt+m",
      "command": "copyRelativeFilePath"
    },
    {
      "key": "alt+g",
      "command": "workbench.view.scm",
      "when": "workbench.scm.active && !gitlens:disabled && config.gitlens.keymap == 'chorded'"
    },
    {
      "key": "ctrl+shift+g g",
      "command": "-workbench.view.scm",
      "when": "workbench.scm.active && !gitlens:disabled && config.gitlens.keymap == 'chorded'"
    },
    {
      "key": "alt+s alt+d",
      "command": "git.stage"
    }
]